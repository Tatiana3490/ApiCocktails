openapi: 3.0.1
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
tags:
  - name: cocktails
    description: Operaciones con cócteles
  - name: users
    description: Operaciones con usuarios
servers:
  - url: 'https://apicocktails.com'
paths:
  /cocktails:
    get:
      tags:
        - cocktails
      summary: Devuelve los cócteles registrados
      description: |
        Devuelve un listado con los cócteles solicitados dependiendo de los filtros aplicados
        
        Se puede filtrar a través de cualquiera de los filtros indicados name o category incluso ambos al mismo tiempo
         - **name**: Filtra por nombre del cóctel
         - **category**: Filtra por categoría del cóctel
      parameters:
        - name: name
          in: query
          description: Filtro por nombre del cóctel
          required: false
          schema:
            type: string
        - name: category
          in: query
          description: Filtro por categoría del cóctel
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CocktailOutDto'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /cocktails/{cocktailId}:
    get:
      tags:
        - cocktails
      summary: Detalle de un cóctel
      description: Devuelve los detalles de un cóctel especifico
      parameters:
        - name: cocktailId
          in: path
          description: Identificador del cóctel
          required: true
          schema:
            type: number
            format: int64
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CocktailOutDto'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - cocktails
      summary: Elimina un cóctel
      description: Da de baja el cóctel cuyo id se para como parámetro
      parameters:
        - name: cocktailId
          in: path
          description: Identificador del cóctel
          required: true
          schema:
            type: number
            format: int64
      responses:
        '204':
          description: No content
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - cocktails
      summary: Modifica un cóctel
      description: Permite modificar todos los detalles de un cóctel
      parameters:
        - name: cocktailId
          in: path
          description: Identificador del cóctel
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        description: Nuevos detalles del cóctel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CocktailInDto'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CocktailOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users/{userId}/cocktails:
    post:
      tags:
        - cocktails
        - users
      summary: Registra un cóctel
      description: Da de alta un nuevo cóctel según la información facilitada
      parameters:
        - name: userId
          in: path
          description: Identificador del usuario propietario del cóctel
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        description: Detalles del nuevo cóctel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cocktail'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CocktailOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users:
    get:
      tags:
        - users
      summary: Devuelve el listado de usuarios
      description: |
        Devuelve un listado con los usuarios registrados dependiendo de los filtros aplicados

      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserOutDto'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - users
      summary: Registra un usuario
      description: Da de alta un nuevo usuario según la información facilitada
      requestBody:
        description: Detalles del nuevo usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              standarUser:
                value:
                  name: Tatiana
                  surname: Alcubilla
                  email: holacocktail@cocktail.com
                  birthDate: 2020-10-10
              premiumUser:
                value:
                  name: name
                  surname: mysurname
                  email: hola@mail.com
                  birthDate: 2020-13-10
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutDto'
              examples:
                standarUser:
                  value:
                    id: 23
                    name: Tatiana
                    surname: Alcubilla
                    email: holacocktail@cocktail.com
                    birthDate: 2020-10-10
                premiumUser:
                  value:
                    id: 26
                    name: name
                    surname: mysurname
                    email: hola@mail.com
                    birthDate: 2020-13-10
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    Cocktail:
      type: object
      properties:
        name:
          type: string
          description: Nombre del coctel
        category:
          type: string
          description: Categoria del coctel
        releaseDate:
          type: string
          format: date
          description: Fecha de publicacion
        alcoholicContent:
          type: number
          format: float
          description: Grado alcoholico
      example:
        name: Virgin Mojito
        category: Sin alcohol
        releaseDate: 2023-12-30
        alcoholicContent: 0.0
    CocktailInDto:
      allOf:
        - $ref: '#/components/schemas/Cocktail'
        - type: object
          properties:
            registrationDate:
              type: string
              format: date
              description: Fecha de registro
              example: 2023-12-30
    CocktailOutDto:
      allOf:
        - type: object
          properties:
            id:
              type: number
              format: int64
              description: El identificador del coctel
              example: 1
            userId:
              type: number
              format: int64
              description: Identificador de su propietario
              example: 12
        - $ref: '#/components/schemas/CocktailInDto'
    User:
      type: object
      properties:
        name:
          type: string
          description: Nombre del usuario
        surname:
          type: string
          description: Apellidos del usuario
        email:
          type: string
          description: Direccion de correo electrónico del usuario
        birthDate:
          type: string
          format: date
          description: Fecha de nacimiento del usuario
      example:
        name: Tatiana
        surname: Alcubilla
        email: holacocktail@cocktail.com
        birthDate: 2020-10-10
    UserInDto:
      allOf:
        - $ref: '#/components/schemas/User'
    UserOutDto:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            id:
              type: number
              format: int64
              description: Identificador único del usuario
              example: 23
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Código de error
        message:
          type: string
          description: Descripción del error
    BadRequest:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            errorMessages:
              type: array
              items:
                $ref: '#/components/schemas/ErrorMessage'
      example:
        code: 400
        message: Bad Request
    ErrorMessage:
      type: object
      properties:
        fieldName:
          type: string
          description: Campo donde está el error
          example: model
        message:
          type: string
          description: Mensaje de error asociado al campo
          example: El dato es obligatorio
    NotFound:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        code: 404
        message: Not Found
    InternalServerError:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        code: 500
        message: Internal Server Error
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'

